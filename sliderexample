"use client"

import { useState } from "react"
import { ChevronUp } from "lucide-react"
import { Slider } from "@/components/ui/slider"

export default function Home() {
  const [contextLength, setContextLength] = useState([0, 2000000])
  const [isExpanded, setIsExpanded] = useState(true)

  const gridMarkers = [
    { value: 0, label: "0" },
    { value: 250000, label: "250K" },
    { value: 500000, label: "500K" },
    { value: 750000, label: "750K" },
    { value: 1000000, label: "1M" },
    { value: 1250000, label: "1.25M" },
    { value: 1500000, label: "1.5M" },
    { value: 1750000, label: "1.75M" },
    { value: 2000000, label: "2M" },
  ]

  return (
    <main className="min-h-screen bg-black p-8">
      <div className="mx-auto max-w-2xl">
        <div className="rounded-lg border border-zinc-800 bg-zinc-950 p-6">
          <button
            onClick={() => setIsExpanded(!isExpanded)}
            className="flex w-full items-center justify-between text-left"
          >
            <h2 className="text-lg font-medium text-white">Context Length</h2>
            <ChevronUp className={`h-5 w-5 text-zinc-400 transition-transform ${isExpanded ? "" : "rotate-180"}`} />
          </button>

          {isExpanded && (
            <div className="mt-6 space-y-6">
              <div className="relative">
                <Slider
                  value={contextLength}
                  onValueChange={setContextLength}
                  min={0}
                  max={2000000}
                  step={10000}
                  className="mt-4 [&_[data-slot=slider-range]]:bg-[#00ff00]"
                />

                <div className="relative mt-2 h-12">
                  {gridMarkers.map((marker) => {
                    const position = (marker.value / 2000000) * 100
                    return (
                      <div key={marker.value} className="absolute" style={{ left: `${position}%` }}>
                        <div className="absolute top-0 h-4 w-px bg-zinc-700" />
                        <div
                          className={`absolute top-5 text-xs text-zinc-400 ${
                            marker.value === 0 ? "-translate-x-1/2" : "-left-4"
                          }`}
                        >
                          {marker.label}
                        </div>
                      </div>
                    )
                  })}
                </div>
              </div>
            </div>
          )}
        </div>
      </div>
    </main>
  )
}
